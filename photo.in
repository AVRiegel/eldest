# transitions dipole moments
rdg_au        = 0.70            # transition dipole moment into the resonant state
cdg_au        = 0.5             # transition dipole moment into any continuum state
q             = 10
# parameters of the investigated system
# the ground state energy is being defined as Eg = 0
Er_a_eV       =  47.6930        # resonance energy RICD in eV
Er_b_eV       =  48.4750        # resonance energy ICD in eV
E_fin_eV      =  42.4138        # final state energy sRICD in eV
tau_s         =  106E-15        # lifetime RICD resonant state via sRICD in s
E_fin_eV_2    =  47.8688        # final state energy ICD in eV
tau_b_s       =  98.0E-15       # lifetime ICD resonant state in s
tau_s_2       = 205.5E-15       # lifetime RICD resonant state via pRICD/AI in s
#
# laser parameters
Omega_eV      = 47.6930         # mean photon energy of the XUV pulse in eV
TX_s          = 250.0E-18       # duration of the XUV pulse in s
n_X           = 50              # number of cycles within the XUV pulse
I_X           = 5.0E8           # intensity of the XUV pulse in W/cm^2
X_shape       = gauss           # options: gauss, sinsq
Xshape        = convoluted      # options: convoluted, infinite
#
# dressing laser parameters
omega_eV      = 1.6             # mean photon energy of the IR pulse in eV
n_L           = 15              # number of cycles within the IR pulse
I_L           = 5.0E11          # intensity of the IR pulse in W/cm^2
delta_t_s     = 35.0E-15        # time difference between the maxima of the two pulses in s
shift_step_s  = 20E-18          # step size for changing delta_t_s in s
phi           = 0               # phase of the cos carrier wave of the IR pulse
FWHM_L        = 7.0E-15         # temporal FWHM of the IR pulse in s
#
# parameters of the simulation
tmax_s        = 70.0E-15        # simulate until time tmax in seconds
timestep_s    = 400.0E-18       # evaluate expression every timestep_s seconds 
#
E_min_eV      =  0.0
E_max_eV      =  6.0
E_step_eV     = 0.01            # energy difference between different evaluated Omegas
#
integ         = analytic        # options: analytic, quadrature, romberg
integ_outer   = quadrature      # options: quadrature, romberg
